#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

old_domain=$YNH_APP_OLD_DOMAIN
old_path=$YNH_APP_OLD_PATH

new_domain=$YNH_APP_NEW_DOMAIN
new_path=$YNH_APP_NEW_PATH

app=$YNH_APP_INSTANCE_NAME

#=================================================
# LOAD SETTINGS
#=================================================

#=================================================
# CHECK PATHS SYNTAX
#=================================================

test -n "$old_path" || old_path="/"
test -n "$new_path" || new_path="/"
new_path=$(ynh_normalize_url_path $new_path)
old_path=$(ynh_normalize_url_path $old_path)

#=================================================
# CHECK WHICH PARTS SHOULD BE CHANGED
#=================================================

change_domain=0
if [ "$old_domain" != "$new_domain" ]
then
	change_domain=1
fi

change_path=0
if [ "$old_path" != "$new_path" ]
then
	change_path=1
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# MODIFY URL IN NGINX CONF FILE
#=================================================

nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf

# Change the path in the nginx config file
if [ $change_path -eq 1 ]
then
  # Make a backup of the original nginx config file if modified
  ynh_backup_if_checksum_is_different "$nginx_conf_path"
  ynh_replace_string "location $old_path {" "location $new_path {" "$nginx_conf_path"
  if [ "$new_path" = "/" ] && [ "$old_path" != "/" ] ; then
    ynh_replace_string "location ~ $old_path" "location ~ " "$nginx_conf_path"
    ynh_replace_string "return 301 $old_path/" "return 301 /" "$nginx_conf_path"
    
    # Move #for-subdir comment at the beginning of the line (line not needed for "/" path)
    ynh_replace_string "\(.*\) #for-subdir" "#for-subdir \1" "$nginx_conf_path"
    elif [ "$new_path" != "/" ] && [ "$old_path" = "/" ] ; then
    # Move #for-subdir comment at the end of the line (line needed for "/path" path)
    ynh_replace_string "#for-subdir\(.*\)" "\1 #for-subdir" "$nginx_conf_path"
    
    # Replace path in several location occurrences based on different recognition patterns
    ynh_replace_string "location ~ " "location ~ $new_path" "$nginx_conf_path"
    ynh_replace_string "return 301 /" "return 301 $new_path/" "$nginx_conf_path"
  else
    ynh_replace_string "location ~ $old_path" "location ~ $new_path" "$nginx_conf_path"
    ynh_replace_string "return \([[:digit:]]\{3\}\) $old_path" "return \1 $new_path"  "$nginx_conf_path"
  fi
  # Calculate and store the nginx config file checksum
  ynh_store_file_checksum "$nginx_conf_path"
fi

# Change the domain for nginx
if [ $change_domain -eq 1 ]
then
  # Delete file checksum for the old conf file location
  ynh_delete_file_checksum "$nginx_conf_path"
  mv $nginx_conf_path /etc/nginx/conf.d/$new_domain.d/$app.conf
  # Store file checksum for the new config file location
  ynh_store_file_checksum "/etc/nginx/conf.d/$new_domain.d/$app.conf"
fi

#=================================================
# SPECIFIC MODIFICATIONS
#=================================================

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
